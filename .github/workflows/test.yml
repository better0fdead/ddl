name: Test

on:
  push:
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['1.10', '2.5', '2.6', '2.7', '2.8', '2.10', '2.11']

    runs-on: ubuntu-20.04
    container:
      image: ubuntu:22.04

    steps:
      - uses: actions/checkout@v4

      - name: Prepare env
        uses: ./.github/actions/prepare-env
        with:
          tarantool-version: '${{ matrix.tarantool }}'

      # Setup luatest and luacheck
      - name: Cache rocks
        uses: actions/cache@v3
        id: cache-rocks
        with:
          path: .rocks/
          key: cache-rocks-${{ matrix.runs-on }}-07

      - name: Install test dependencies
        run: ./deps.sh
        if: steps.cache-rocks.outputs.cache-hit != 'true'

      - run: echo $PWD/.rocks/bin >> $GITHUB_PATH

      - run: tt rocks list
      - run: tt rocks install cartridge
        env:
          CMAKE_DUMMY_WEBUI: true
      - run: tt rocks remove ddl --force

      - run: tt rocks make
      - run: cmake -S . -B build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run luacheck
        run: make -C build luacheck

      - name: Run tests and code coverage analysis
        run: make -C build coverage

      # Cleanup cached paths
      - run: tt rocks remove cartridge
      - run: tt rocks remove ddl

  benchmark:
    strategy:
      fail-fast: false
      matrix:
        tarantool: ['2.11']

    runs-on: [self-hosted, Linux, x86_64, regular]
    container:
      image: ubuntu:22.04

    steps:
      - uses: actions/checkout@v4

      - name: Prepare env
        uses: ./.github/actions/prepare-env
        with:
          tarantool-version: '${{ matrix.tarantool }}'

      # Setup luatest
      - name: Cache rocks
        uses: actions/cache@v3
        id: cache-rocks
        with:
          path: .rocks/
          key: cache-rocks-${{ matrix.runs-on }}-bench-01

      - run: tt rocks install luatest
        if: steps.cache-rocks.outputs.cache-hit != 'true'

      - run: tarantool ./test/bench_cache.lua
